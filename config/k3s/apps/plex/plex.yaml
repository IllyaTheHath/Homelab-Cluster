---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-plex-media
provisioner: smb.csi.k8s.io
parameters:
  source: "//172.16.2.2/视频"
  csi.storage.k8s.io/node-stage-secret-name: "nas-smb-creds"
  csi.storage.k8s.io/node-stage-secret-namespace: "default"
volumeBindingMode: Immediate
reclaimPolicy: Delete
mountOptions:
  - dir_mode=0777
  - file_mode=0644
  - uid=1000
  - gid=1000

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-plex-config
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

# ---
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: sc-plex-config
# provisioner: smb.csi.k8s.io
# parameters:
#   source: "//172.16.2.2/k3s/data/plex"
#   csi.storage.k8s.io/node-stage-secret-name: "nas-smb-creds"
#   csi.storage.k8s.io/node-stage-secret-namespace: "default"
# volumeBindingMode: Immediate
# reclaimPolicy: Delete
# mountOptions:
#   - dir_mode=0777
#   - file_mode=0644
#   - uid=1000
#   - gid=1000

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-plex-config
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: sc-plex-config
  local:
    path: /data/k3s/plex
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k3s-s01

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: plex
  name: pvc-plex-config
  namespace: plex
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: sc-plex-config
  volumeName: pv-plex-config
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: plex
  name: pvc-plex-media
  namespace: plex
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: sc-plex-media
  resources:
    requests:
      storage: 10Ti

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: plex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plex
  template:
    metadata:
      labels:
        app: plex
    spec:
      #hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet
      containers:
        - image: plexinc/pms-docker
          name: plex
          env:
            - name: TZ
              value: "Asia/Shanghai"
            - name: PLEX_UID
              value: "1000"
            - name: PLEX_GID
              value: "1000"
          ports:
            - containerPort: 32400
              name: webui
          volumeMounts:
            - mountPath: /config
              name: config
              subPath: config
            - mountPath: /transcode
              name: config
              subPath: transcode
            - mountPath: /media
              name: media
          resources:
            limits:
              memory: 2Gi
              cpu: "4"
            requests:
              memory: 1Gi
              cpu: "2"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: pvc-plex-config
        - name: media
          persistentVolumeClaim:
            claimName: pvc-plex-media
        # - name: config-nfs
        #   nfs:
        #     server: 172.16.2.2
        #     path: /k3s/data/plex

---
apiVersion: v1
kind: Service
metadata:
  name: srv-plex
  namespace: plex
spec:
  type: NodePort
  selector:
    app: plex
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6
  ports:
    - port: 32400
      protocol: TCP
      name: webui
      targetPort: webui
      nodePort: 32400
    - port: 32400 # UDP 大概没有必要，加了也无所谓
      protocol: UDP
      name: webui
      targetPort: webui
      nodePort: 32400